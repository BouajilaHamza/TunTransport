name: Dev Envirement

on:
    workflow_dispatch:
    push:
        branches:
            - dev


jobs:
  # build-and-push-docker-image:
  #   runs-on: ubuntu-latest

  #   services:
  #     redis:
  #       image: redis/redis-stack:latest
  #       ports:
  #         - 6379:6379

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}  # Add Docker Hub username as a secret
  #         password: ${{ secrets.DOCKERHUB_PASSWORD }}  # Add Docker Hub password as a secret

  #     - name: Build and push Docker images
  #       run: |
  #         docker build \
  #         --build-arg MONGO_URI="${{ secrets.MONGO_URI }}" \
  #         --build-arg SCRAPING_URI="${{ secrets.SCRAPING_URI }}" \
  #         -t ${{ secrets.DOCKERHUB_USERNAME }}/tuntransport-dashboard:latest Dashboard/.

  #         docker build \
  #         --build-arg MONGO_URI="${{ secrets.MONGO_URI }}" \
  #         -t ${{ secrets.DOCKERHUB_USERNAME }}/tuntransport-data-ingestion:latest Data-Ingestion/.

  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/tuntransport-dashboard:latest
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/tuntransport-data-ingestion:latest



  ssh-pull-and-run:
    runs-on: ubuntu-latest
    # needs: build-and-push-docker-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2


      # - name: Saving SSH private key
      #   run: |
      #     mkdir -p ~/.ssh/
      #     echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/private.key


      # - name: Add SSH key to known hosts
      #   run: |
      #     chmod 600 ~/.ssh/private.key
      #     ssh-keyscan -t rsa "192.168.100.71" >> ~/.ssh/known_hosts || echo "Failed to add host key"




      - name: Download compose file
        run: |
          mkdir -p ./compose
          cp ./compose.yaml ./compose/


      - name: Copy file to Ubuntu Server
        uses: actions/upload-artifact@v2
        with:
          name: compose.yaml
          path: ./compose/compose.yaml

      - name: SSH to Ubuntu Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            scp -r ./compose.yaml ubuntu@${{ secrets.SERVER_IP }}:/path/to/destination
            ssh ubuntu@${{ secrets.SERVER_IP }} "docker-compose -f /path/to/destination/compose.yaml up -d"
